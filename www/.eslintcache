[{"/home/fabio/Projects/secret-amm-limit-orders/www/src/index.tsx":"1","/home/fabio/Projects/secret-amm-limit-orders/www/src/reportWebVitals.ts":"2","/home/fabio/Projects/secret-amm-limit-orders/www/src/App.tsx":"3","/home/fabio/Projects/secret-amm-limit-orders/www/src/requests/getViewKey.js":"4","/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/ViewKeyButton.js":"5","/home/fabio/Projects/secret-amm-limit-orders/www/src/requests/createPairOrderBook.js":"6","/home/fabio/Projects/secret-amm-limit-orders/www/src/requests/createLimitOrder.js":"7","/home/fabio/Projects/secret-amm-limit-orders/www/src/requests/withdrawLimitOrder.js":"8","/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/CreateNewLimitOrder.tsx":"9","/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/MyLimitOrders.tsx":"10"},{"size":500,"mtime":1611485917504,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1611485917504,"results":"13","hashOfConfig":"12"},{"size":6206,"mtime":1613867296481,"results":"14","hashOfConfig":"12"},{"size":514,"mtime":1612552964066,"results":"15","hashOfConfig":"12"},{"size":1779,"mtime":1612637631457,"results":"16","hashOfConfig":"12"},{"size":734,"mtime":1612873133222,"results":"17","hashOfConfig":"12"},{"size":1186,"mtime":1612972791138,"results":"18","hashOfConfig":"12"},{"size":299,"mtime":1612969407446,"results":"19","hashOfConfig":"12"},{"size":12267,"mtime":1613907159052,"results":"20","hashOfConfig":"12"},{"size":7168,"mtime":1613906302623,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ef2xb6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/fabio/Projects/secret-amm-limit-orders/www/src/index.tsx",[],["47","48"],"/home/fabio/Projects/secret-amm-limit-orders/www/src/reportWebVitals.ts",[],"/home/fabio/Projects/secret-amm-limit-orders/www/src/App.tsx",["49"],"import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { SigningCosmWasmClient } from 'secretjs';\nimport ViewKeyButton from \"./Containers/ViewKeyButton\"\nimport MyLimitOrders from \"./Containers/MyLimitOrders\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CreateNewLimitOrder from \"./Containers/CreateNewLimitOrder\";\nimport axios from 'axios';\n\nconst AMM_FACTORY_ADDRESS=\"secret1ypfxpp4ev2sd9vj9ygmsmfxul25xt9cfadrxxy\"\nconst ORDERS_FACTORY_ADDRESS=\"secret10m5km7axzvfrppxngrpyzchxzl5nteqj9dp8zt\" \nconst SSCRT_CONTRACT_ADDRESS=\"secret1s7c6xp9wltthk5r6mmavql4xld5me3g37guhsx\"\n\nfunction App() {\n  const [client, setClient] = useState({\n    ready: false,\n    execute: null,\n    accountData: {\n      address: \"\"\n    }\n  });\n\n  const [viewKey, setViewKey] = useState({\n    ready: false,\n    value: null\n  });\n\n  const [tokensData, setTokensData] = useState<any>(null);\n\n  useEffect(() => {\n    async function init() {\n      setupKeplr(setClient);\n      const response = await axios.get(\"https://scrt-bridge-api.azurewebsites.net/tokens/?page=0&size=1000\");\n      setTokensData([...response.data.tokens,{\n        dst_address: SSCRT_CONTRACT_ADDRESS,\n        decimals: 6,\n        display_props: {\n          symbol: \"sSCRT\"\n        }\n      }]);\n    }\n    init();\n  }, [])\n\n  if(!client.ready) {\n    return <div>Loading...</div>\n  } else {\n    return (\n      <div className=\"App\">\n          <ViewKeyButton \n            ORDERS_FACTORY_ADDRESS={ORDERS_FACTORY_ADDRESS}\n            client={client}\n            viewKey={viewKey}\n            setViewKey={setViewKey}\n          />\n          {\n            viewKey.value &&  \n              <div>\n                  <CreateNewLimitOrder \n                    ORDERS_FACTORY_ADDRESS={ORDERS_FACTORY_ADDRESS}\n                    AMM_FACTORY_ADDRESS={AMM_FACTORY_ADDRESS}\n                    tokensData={tokensData}\n                    client={client}\n                    viewKey={viewKey.value}\n                  /> \n                  <MyLimitOrders \n                    ORDERS_FACTORY_ADDRESS={ORDERS_FACTORY_ADDRESS}\n                    tokensData={tokensData}\n                    client={client}\n                    viewKey={viewKey.value}\n                  />\n              </div>\n          }\n          \n          {\n            /*\n              <PairsAvailable \n                AMM_FACTORY_ADDRESS={AMM_FACTORY_ADDRESS}\n                ORDERS_FACTORY_ADDRESS={ORDERS_FACTORY_ADDRESS}\n                client={client}\n                viewKey={viewKey.value}\n              />\n            */\n          }\n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n\nconst setupKeplr = async (setClient: any) => {\n  // Define sleep\n  const CHAIN_ID = \"holodeck-2\";\n  \n  const sleep = (ms: number) => new Promise((accept) => setTimeout(accept, ms));\n\n  // Wait for Keplr to be injected to the page\n  while (\n    !window.keplr &&\n    !window.getOfflineSigner &&\n    !window.getEnigmaUtils\n  ) {\n    await sleep(10);\n  }\n\n  // Use a custom chain with Keplr.\n  // On mainnet we don't need this (`experimentalSuggestChain`).\n  // This works well with `enigmampc/secret-network-sw-dev`:\n  //     - https://hub.docker.com/r/enigmampc/secret-network-sw-dev\n  //     - Run a local chain: `docker run -it --rm -p 26657:26657 -p 26656:26656 -p 1337:1337 -v $(shell pwd):/root/code --name secretdev enigmampc/secret-network-sw-dev`\n  //     - `alias secretcli='docker exec -it secretdev secretcli'`\n  //     - Store a contract: `docker exec -it secretdev secretcli tx compute store /root/code/contract.wasm.gz --from a --gas 10000000 -b block -y`\n  // On holodeck, set:\n  //     1. CHAIN_ID = \"holodeck-2\"\n  //     2. rpc = \"ttp://bootstrap.secrettestnet.io:26657\"\n  //     3. rest = \"https://bootstrap.secrettestnet.io\"\n  //     4. chainName = Whatever you like\n  // For more examples, go to: https://github.com/chainapsis/keplr-example/blob/master/src/main.js\n  await window.keplr.experimentalSuggestChain({\n    chainId: CHAIN_ID,\n    chainName: \"Local Secret Chain\",\n    rpc: \"http://bootstrap.secrettestnet.io:26657\",\n    rest: \"https://bootstrap.secrettestnet.io\",\n    bip44: {\n      coinType: 529,\n    },\n    coinType: 529,\n    stakeCurrency: {\n      coinDenom: \"SCRT\",\n      coinMinimalDenom: \"uscrt\",\n      coinDecimals: 6,\n    },\n    bech32Config: {\n      bech32PrefixAccAddr: \"secret\",\n      bech32PrefixAccPub: \"secretpub\",\n      bech32PrefixValAddr: \"secretvaloper\",\n      bech32PrefixValPub: \"secretvaloperpub\",\n      bech32PrefixConsAddr: \"secretvalcons\",\n      bech32PrefixConsPub: \"secretvalconspub\",\n    },\n    currencies: [\n      {\n        coinDenom: \"SCRT\",\n        coinMinimalDenom: \"uscrt\",\n        coinDecimals: 6,\n      },\n    ],\n    feeCurrencies: [\n      {\n        coinDenom: \"SCRT\",\n        coinMinimalDenom: \"uscrt\",\n        coinDecimals: 6,\n      },\n    ],\n    gasPriceStep: {\n      low: 0.3,\n      average: 0.45,\n      high: 0.6,\n    },\n    features: [\"secretwasm\"],\n  });\n\n  // Enable Keplr.\n  // This pops-up a window for the user to allow keplr access to the webpage.\n  await window.keplr.enable(CHAIN_ID);\n\n  // Setup SecrtJS with Keplr's OfflineSigner\n  // This pops-up a window for the user to sign on each tx we sent\n  const keplrOfflineSigner = window.getOfflineSigner(CHAIN_ID);\n  const accounts = await keplrOfflineSigner.getAccounts();\n\n  const execute = await new SigningCosmWasmClient(\n    \"https://bootstrap.secrettestnet.io\", // holodeck - https://bootstrap.secrettestnet.io; mainnet - user your LCD/REST provider\n    accounts[0].address,\n    window.getOfflineSigner(CHAIN_ID),\n    window.getEnigmaUtils(CHAIN_ID),\n    {\n      // 300k - Max gas units we're willing to use for init\n      init: {\n        amount: [{ amount: \"500000\", denom: \"uscrt\" }],\n        gas: \"500000\",\n      },\n      // 300k - Max gas units we're willing to use for exec\n      exec: {\n        amount: [{ amount: \"500000\", denom: \"uscrt\" }],\n        gas: \"500000\",\n      },\n    }\n  )\n\n  const accountData = await execute.getAccount(accounts[0].address);\n  \n  setClient({\n    ready: true,\n    execute,\n    accountData\n  })\n}\n\ndeclare global {\n  interface Window { keplr: any, getOfflineSigner:any, getEnigmaUtils:any }\n}\n\n\n","/home/fabio/Projects/secret-amm-limit-orders/www/src/requests/getViewKey.js",[],["50","51"],"/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/ViewKeyButton.js",["52"],"import getViewKey from \"../requests/getViewKey\";\nimport React, {useState,useEffect} from 'react';\nimport {Spinner, Button} from \"react-bootstrap\"\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({\n    ORDERS_FACTORY_ADDRESS,\n    client,\n    viewKey,\n    setViewKey\n}) => {\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        if (client.ready && !viewKey.ready) {\n          const viewKeys = localStorage.getItem(\"vk\");\n          if (viewKeys && JSON.parse(viewKeys)[ORDERS_FACTORY_ADDRESS] && JSON.parse(viewKeys)[ORDERS_FACTORY_ADDRESS][client.accountData.address]) {\n            setViewKey({\n              ready: true,\n              value: JSON.parse(viewKeys)[ORDERS_FACTORY_ADDRESS][client.accountData.address]\n            })\n          } else {\n            setViewKey({\n              ready: true,\n              value: null\n            })\n          }\n        }\n      }, [client, setViewKey, viewKey.ready])\n      \n    if (viewKey.ready && !viewKey.value) {\n        return (\n            <Button variant=\"primary\" onClick={async() => {\n                setLoading(true)\n                try {\n                    const response = await getViewKey(client.execute, ORDERS_FACTORY_ADDRESS)\n                    localStorage.setItem(\"vk\",JSON.stringify({[ORDERS_FACTORY_ADDRESS]: {[client.accountData.address]: response}}))\n                    setViewKey({\n                      ready: true,\n                      value: response\n                    })\n                } catch {}\n                setLoading(false)\n              }}>\n                  {\n                    loading ? <Spinner animation=\"border\" /> : \"Create View Key\"\n                  }\n            </Button>\n        )\n    } else {\n        return null\n    }\n}\n","/home/fabio/Projects/secret-amm-limit-orders/www/src/requests/createPairOrderBook.js",[],["53","54"],"/home/fabio/Projects/secret-amm-limit-orders/www/src/requests/createLimitOrder.js",[],"/home/fabio/Projects/secret-amm-limit-orders/www/src/requests/withdrawLimitOrder.js",[],"/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/CreateNewLimitOrder.tsx",["55","56","57","58"],"/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/MyLimitOrders.tsx",["59","60","61","62","63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":12},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"73","severity":1,"message":"74","line":29,"column":10,"nodeType":"75","endLine":29,"endColumn":45,"suggestions":"76"},{"ruleId":"65","replacedBy":"77"},{"ruleId":"67","replacedBy":"78"},{"ruleId":"69","severity":1,"message":"79","line":2,"column":9,"nodeType":"71","messageId":"72","endLine":2,"endColumn":13},{"ruleId":"73","severity":1,"message":"80","line":33,"column":8,"nodeType":"75","endLine":33,"endColumn":10,"suggestions":"81"},{"ruleId":"73","severity":1,"message":"82","line":56,"column":8,"nodeType":"75","endLine":56,"endColumn":37,"suggestions":"83"},{"ruleId":"73","severity":1,"message":"84","line":72,"column":7,"nodeType":"75","endLine":72,"endColumn":58,"suggestions":"85"},{"ruleId":"69","severity":1,"message":"79","line":2,"column":9,"nodeType":"71","messageId":"72","endLine":2,"endColumn":13},{"ruleId":"69","severity":1,"message":"86","line":2,"column":32,"nodeType":"71","messageId":"72","endLine":2,"endColumn":37},{"ruleId":"69","severity":1,"message":"87","line":2,"column":39,"nodeType":"71","messageId":"72","endLine":2,"endColumn":53},{"ruleId":"69","severity":1,"message":"88","line":2,"column":55,"nodeType":"71","messageId":"72","endLine":2,"endColumn":63},{"ruleId":"73","severity":1,"message":"89","line":23,"column":8,"nodeType":"75","endLine":23,"endColumn":10,"suggestions":"90"},{"ruleId":"73","severity":1,"message":"91","line":92,"column":8,"nodeType":"75","endLine":92,"endColumn":10,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ORDERS_FACTORY_ADDRESS'. Either include it or remove the dependency array.","ArrayExpression",["95"],["93"],["94"],"'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'AMM_FACTORY_ADDRESS' and 'client.execute'. Either include them or remove the dependency array. If 'setAmmFactoryPairs' needs the current value of 'client.execute', you can also switch to useReducer instead of useState and read 'client.execute' in the reducer.",["96"],"React Hook useEffect has missing dependencies: 'ORDERS_FACTORY_ADDRESS', 'ammFactoryPairs.pairs', 'client.execute', and 'getAmmPrice'. Either include them or remove the dependency array.",["97"],"React Hook useEffect has a missing dependency: 'getAmmPrice'. Either include it or remove the dependency array.",["98"],"'Modal' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","React Hook useEffect has missing dependencies: 'ORDERS_FACTORY_ADDRESS', 'client.accountData.address', 'client.execute', and 'viewKey'. Either include them or remove the dependency array. If 'setMyLimitOrders' needs the current value of 'client.execute', you can also switch to useReducer instead of useState and read 'client.execute' in the reducer.",["99"],"React Hook useEffect has missing dependencies: 'client.accountData.address', 'client.execute', 'getAmmPrice', 'orderBookAddress', and 'viewKey'. Either include them or remove the dependency array.",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [ORDERS_FACTORY_ADDRESS, client, setViewKey, viewKey.ready]",{"range":"113","text":"114"},"Update the dependencies array to be: [AMM_FACTORY_ADDRESS, client.execute]",{"range":"115","text":"116"},"Update the dependencies array to be: [ORDERS_FACTORY_ADDRESS, ammFactoryPairs.pairs, client.execute, getAmmPrice, selectedAmmFactoryPairIndex]",{"range":"117","text":"118"},"Update the dependencies array to be: [selectedAmmFactoryPairIndex, limitOrderIsBidInput, getAmmPrice]",{"range":"119","text":"120"},"Update the dependencies array to be: [ORDERS_FACTORY_ADDRESS, client.accountData.address, client.execute, viewKey]",{"range":"121","text":"122"},"Update the dependencies array to be: [client.accountData.address, client.execute, getAmmPrice, orderBookAddress, viewKey]",{"range":"123","text":"124"},[932,967],"[ORDERS_FACTORY_ADDRESS, client, setViewKey, viewKey.ready]",[1381,1383],"[AMM_FACTORY_ADDRESS, client.execute]",[2383,2412],"[ORDERS_FACTORY_ADDRESS, ammFactoryPairs.pairs, client.execute, getAmmPrice, selectedAmmFactoryPairIndex]",[2909,2960],"[selectedAmmFactoryPairIndex, limitOrderIsBidInput, getAmmPrice]",[749,751],"[ORDERS_FACTORY_ADDRESS, client.accountData.address, client.execute, viewKey]",[3149,3151],"[client.accountData.address, client.execute, getAmmPrice, orderBookAddress, viewKey]"]