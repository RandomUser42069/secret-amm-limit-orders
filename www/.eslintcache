[{"/home/fabio/Projects/secret-amm-limit-orders/www/src/index.tsx":"1","/home/fabio/Projects/secret-amm-limit-orders/www/src/reportWebVitals.ts":"2","/home/fabio/Projects/secret-amm-limit-orders/www/src/App.tsx":"3","/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/ViewKeyButton.js":"4","/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/CreateNewLimitOrder.tsx":"5","/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/MyActiveLimitOrders.tsx":"6","/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/MyHistoryLimitOrders.tsx":"7","/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/MyOrders.tsx":"8"},{"size":500,"mtime":1611485917504,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1611485917504,"results":"11","hashOfConfig":"10"},{"size":7594,"mtime":1614887931422,"results":"12","hashOfConfig":"10"},{"size":2249,"mtime":1614535087086,"results":"13","hashOfConfig":"10"},{"size":14707,"mtime":1614536410521,"results":"14","hashOfConfig":"10"},{"size":9762,"mtime":1614887671816,"results":"15","hashOfConfig":"10"},{"size":9167,"mtime":1614888397896,"results":"16","hashOfConfig":"10"},{"size":4305,"mtime":1614888972605,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ef2xb6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/fabio/Projects/secret-amm-limit-orders/www/src/index.tsx",[],["38","39"],"/home/fabio/Projects/secret-amm-limit-orders/www/src/reportWebVitals.ts",[],"/home/fabio/Projects/secret-amm-limit-orders/www/src/App.tsx",["40"],"/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/ViewKeyButton.js",["41"],"import React, {useState,useEffect} from 'react';\nimport {Spinner, Button} from \"react-bootstrap\"\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({\n    ORDERS_FACTORY_ADDRESS,\n    client,\n    viewKey,\n    setViewKey\n}) => {\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        if (client.ready && !viewKey.ready) {\n          const viewKeys = localStorage.getItem(\"vk\");\n          if (viewKeys && JSON.parse(viewKeys)[ORDERS_FACTORY_ADDRESS] && JSON.parse(viewKeys)[ORDERS_FACTORY_ADDRESS][client.accountData.address]) {\n            setViewKey({\n              ready: true,\n              value: JSON.parse(viewKeys)[ORDERS_FACTORY_ADDRESS][client.accountData.address]\n            })\n          } else {\n            setViewKey({\n              ready: true,\n              value: null\n            })\n          }\n        }\n      }, [client, setViewKey, viewKey.ready])\n      \n    if (viewKey.ready && !viewKey.value) {\n        return (\n            <Button variant=\"primary\" onClick={async() => {\n                setLoading(true)\n                try {\n                    const response = await getViewKey(client.execute, ORDERS_FACTORY_ADDRESS)\n                    localStorage.setItem(\"vk\",JSON.stringify({[ORDERS_FACTORY_ADDRESS]: {[client.accountData.address]: response}}))\n                    setViewKey({\n                      ready: true,\n                      value: response\n                    })\n                } catch {}\n                setLoading(false)\n              }}>\n                  {\n                    loading ? <Spinner animation=\"border\" /> : \"Create View Key\"\n                  }\n            </Button>\n        )\n    } else {\n        return null\n    }\n}\n\nconst { fromUtf8 } = require(\"@iov/encoding\");\n\n// eslint-disable-next-line import/no-anonymous-default-export\nconst getViewKey = async (client, tokenAddress) => {\n    let handleMsg = { create_viewing_key: {entropy: \"1321313123\"} };\n    const response = await client.execute(tokenAddress, handleMsg);\n    const apiKey = JSON.parse(fromUtf8(response.data))\n    if (apiKey.create_viewing_key) {\n      return apiKey.create_viewing_key.key\n    } else if (apiKey.viewing_key) {\n      return apiKey.viewing_key.key\n    }\n  }",["42","43"],"/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/CreateNewLimitOrder.tsx",["44","45","46","47","48"],"import React, {useState,useEffect} from 'react';\nimport {Card, Button, Spinner, Modal, DropdownButton, Dropdown, Form, Nav} from 'react-bootstrap'\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({\n    AMM_FACTORY_ADDRESS,\n    ORDERS_FACTORY_ADDRESS,\n    tokensData,\n    client,\n    viewKey,\n    remountMyLimitOrders\n}: CreateNewLimitOrderProps) => {\n    const [showCreateLimitOrderModal, setShowCreateLimitOrderModal] = useState(false);\n    const [secretOrderBooks, setSecretOrderBooks] = useState<any>(null);\n    const [selectedAmmFactoryPairIndex, setSelectedAmmFactoryPairIndex] = useState<any>(null)\n\n    const [createLimitOrderLoading, setCreateLimitOrderLoading] = useState<boolean>(false);\n    const [selectedAmmPriceLoading, setSelectedAmmPairPriceLoading] = useState<boolean>(false);\n    const [selectedAmmPairPrice, setSelectedAmmPairPrice] = useState<any>(null);\n\n    const [limitOrderIsBidInput, setLimitOrderIsBidInput] = useState<boolean>(true);\n    const [limitOrderAmountInput, setLimitOrderAmountInput] = useState<any>(null);\n    const [limitOrderPriceInput, setLimitOrderPriceInput] = useState<any>(null);\n\n    useEffect(() => {\n        async function init() {\n            const response = await client.execute.queryContractSmart(ORDERS_FACTORY_ADDRESS, { \n                secret_order_books: {}\n              })\n            setSecretOrderBooks(response.secret_order_books);\n            /*setAmmFactoryPairs(await client.execute.queryContractSmart(AMM_FACTORY_ADDRESS, { \n                pairs: {}\n              }));*/\n          }\n        init()\n    }, [])\n\n    useEffect(() => {\n        async function getData() {\n            if (selectedAmmFactoryPairIndex !== null) {\n                try {\n                    const responsePromiseAMM = getAmmPrice();\n                    //const responsePromiseOrderBook = getOrderBook();\n    \n                    const [responseAMM] = await Promise.all([responsePromiseAMM]);\n    \n                    setSelectedAmmPairPrice(responseAMM)\n                    setSelectedAmmPairPriceLoading(false)\n                    /*setOrderBookPair({\n                        isInstanciated: responseOrderBook.secret_order_books.secret_order_book ? true : false,\n                        data: responseOrderBook.secret_order_books.secret_order_book\n                    })*/\n                } catch(e){alert(e)}\n            }\n        }\n        getData()\n    }, [selectedAmmFactoryPairIndex])\n\n    const getAmmPrice = async () => {\n        return client.execute.queryContractSmart(secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].amm_pair_contract_addr, { \n            simulation: {\n                offer_asset: {\n                    info: {\n                        token: {\n                            ...secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[0].token,\n                            viewing_key: \"\"\n                        }\n                    },\n                    amount: \"\" + Math.pow(10, tokensData.find((data: any) => data.dst_address === secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[0].token.contract_addr).decimals)\n                }\n            }\n          })\n    }\n\n    /*const getOrderBook = async () => {\n        return client.execute.queryContractSmart(ORDERS_FACTORY_ADDRESS, { \n            secret_order_books: {\n                contract_address: secretOrderBooks.secretOrderBooks[selectedAmmFactoryPairIndex].contract_addr\n            }\n          })\n    }*/\n\n    const getTokenSymbol = (address: string) => {\n        const tokenData = tokensData.find((data: any) => data.dst_address === address);\n        return (tokenData ? tokenData.display_props.symbol : address)\n    } \n\n    const displaySymbolPair = (pair: any) => {\n        const token1Address = pair.asset_infos[0].token ? pair.asset_infos[0].token.contract_addr : pair.asset_infos[0].native_token.denom;\n        const token1Data = tokensData.find((data: any) => data.dst_address === token1Address);\n        const token2Address = pair.asset_infos[1].token ? pair.asset_infos[1].token.contract_addr : pair.asset_infos[1].native_token.denom;\n        const token2Data = tokensData.find((data: any) => data.dst_address === token2Address);\n        return (token1Data ? token1Data.display_props.symbol : token1Address) + \" / \" + (token2Data ? token2Data.display_props.symbol : token2Address) \n    }\n\n    const getCurrentPrice = () => {\n        if(selectedAmmPairPrice) {\n            const tokenData = tokensData.find((data: any) => data.dst_address === secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[1].token.contract_addr)\n            const otherTokenData = tokensData.find((data: any) => data.dst_address === secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[0].token.contract_addr)\n            return selectedAmmPairPrice.return_amount / Math.pow(10, tokenData.decimals) + \" \" + tokenData.display_props.symbol + \" per \" + otherTokenData.display_props.symbol\n        }\n                                    \n    }\n\n    console.log(tokensData && secretOrderBooks && secretOrderBooks.secret_order_books)\n\n    return (\n        <div>\n            <Button onClick={() => setShowCreateLimitOrderModal(true)}>Create New Limit Order</Button>\n            <Modal show={showCreateLimitOrderModal} onHide={() => {\n                setShowCreateLimitOrderModal(false)\n                setSelectedAmmFactoryPairIndex(null)\n            }}>\n                <Modal.Header closeButton>\n                <Modal.Title>Create Limit Order</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {\n                        tokensData && secretOrderBooks && \n                            <DropdownButton id=\"dropdown-basic-button\" title={\n                                selectedAmmFactoryPairIndex !== null ? \n                                    displaySymbolPair(secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex])\n                                : \"Select Pair...\"\n                            }>\n                                {\n                                    secretOrderBooks!.secret_order_books.map((pair: any, index: number) =>\n                                        <Dropdown.Item key={pair.contract_addr} onClick={() => {\n                                            setSelectedAmmPairPriceLoading(true)\n                                            setSelectedAmmFactoryPairIndex(index)\n                                        }}>\n                                            {\n                                                displaySymbolPair(pair)\n                                            }\n                                        </Dropdown.Item>\n                                    )\n                                }   \n                            </DropdownButton>\n                    }\n                    {\n                        selectedAmmFactoryPairIndex !== null &&\n                        <div>\n                            <br/>\n                            { selectedAmmPriceLoading && <Spinner animation=\"border\"/> }\n                            { !selectedAmmPriceLoading && selectedAmmPairPrice && getCurrentPrice()}\n                            <br/>\n                            <br/>\n                            <Button style={{marginRight: \"20px\"}} variant={limitOrderIsBidInput ? \"success\" : \"light\"} onClick={() => { setLimitOrderIsBidInput(true)}}> \n                                    Buy \n                            </Button>\n                            <Button variant={!limitOrderIsBidInput ? \"danger\" : \"light\"} onClick={() => { setLimitOrderIsBidInput(false)}}> \n                                    Sell \n                            </Button>\n                            <br/>\n                            <br/>\n                            <label>{`Price of Limit Order (` + getTokenSymbol(secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[1].token.contract_addr) + \")\"}</label><br/>\n                            <input onChange={(e) => setLimitOrderPriceInput(e.target.value)}></input><br/>\n                            <label>{\n                                limitOrderIsBidInput ?\n                                `Deposit Amount (` + getTokenSymbol(secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[1].token.contract_addr) + \")\" \n                                :\n                                `Deposit Amount (` + getTokenSymbol(secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[0].token.contract_addr) + \")\"\n                            }\n                            </label><br/>\n                            <input onChange={(e) => setLimitOrderAmountInput(e.target.value)}></input><br/>\n                            <label>{\n                                limitOrderIsBidInput ?\n                                `Expected Amount (` + getTokenSymbol(secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[0].token.contract_addr) + \")\" \n                                :\n                                `Expected Amount (` + getTokenSymbol(secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[1].token.contract_addr) + \")\"\n                            }\n                            </label><br/>\n                            <input disabled value={\n                                limitOrderAmountInput && limitOrderPriceInput ? \n                                    (\n                                        limitOrderIsBidInput ? (\"\" + limitOrderAmountInput/limitOrderPriceInput)\n                                        : (\"\" + limitOrderAmountInput*limitOrderPriceInput)\n                                    )\n                                : \"\"\n                            }></input><br/>\n                            <br/>\n                            { \n                                <Button \n                                    style={{width: \"100%\"}}\n                                    variant={limitOrderIsBidInput ? \"success\" : \"danger\"}\n                                    onClick={async() => {\n                                        try {\n                                            if(\n                                                limitOrderAmountInput === null || limitOrderAmountInput === \"\" || limitOrderAmountInput === \"0\" ||\n                                                limitOrderPriceInput === null || limitOrderPriceInput === \"\" || limitOrderPriceInput === \"0\") {\n                                                throw Error(\"Bad Inputs\");\n                                            }   \n\n                                            const limitOrderExpectedAmount: any = \n                                                limitOrderIsBidInput ? (\"\" + limitOrderAmountInput/limitOrderPriceInput)\n                                                    : (\"\" + limitOrderAmountInput*limitOrderPriceInput)\n                                            // loading\n                                            setCreateLimitOrderLoading(true)\n                                            await client.execute.execute(\n                                                secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[limitOrderIsBidInput ? 1 : 0].token.contract_addr,\n                                                { \n                                                    send: {\n                                                        recipient: secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].contract_addr,\n                                                        amount: \"\" + Math.floor(limitOrderAmountInput*Math.pow(10, tokensData.find((data: any) => data.dst_address === secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[limitOrderIsBidInput ? 1 : 0].token.contract_addr).decimals)),\n                                                        msg: btoa(JSON.stringify({\n                                                            create_limit_order: {\n                                                                is_bid: limitOrderIsBidInput,\n                                                                price: \"\" + Math.floor(limitOrderPriceInput*Math.pow(10, tokensData.find((data: any) => data.dst_address === secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[1].token.contract_addr).decimals)),\n                                                                expected_amount: \"\" + Math.floor(limitOrderExpectedAmount*Math.pow(10, tokensData.find((data: any) => data.dst_address === secretOrderBooks.secret_order_books[selectedAmmFactoryPairIndex].asset_infos[limitOrderIsBidInput ? 0 : 1].token.contract_addr).decimals)),\n                                                            }\n                                                        }))\n                                                    } \n                                                }\n                                            )\n                                            setCreateLimitOrderLoading(false)\n                                            // sair deste e fazer refresh do outro\n                                            setShowCreateLimitOrderModal(false)\n                                            setSelectedAmmFactoryPairIndex(null)\n                                            remountMyLimitOrders()\n                                        } catch (e) {\n                                            alert(e)\n                                            setCreateLimitOrderLoading(false)\n                                        }\n                                    }\n                                }> \n                                    {\n                                        createLimitOrderLoading ? <Spinner animation=\"border\"/> : limitOrderIsBidInput ? \"Buy\" : \"Sell\"\n                                    }\n                                </Button>\n                            }\n                        </div>\n                    }\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={() => {\n                    setSelectedAmmFactoryPairIndex(null)\n                    setShowCreateLimitOrderModal(false)\n                }}>\n                    Close\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n        )\n}\n\ntype CreateNewLimitOrderProps = {\n    AMM_FACTORY_ADDRESS: string,\n    ORDERS_FACTORY_ADDRESS: string,\n    client: any,\n    tokensData: any,\n    viewKey: string | null,\n    remountMyLimitOrders: any\n}\n\n","/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/MyActiveLimitOrders.tsx",["49","50","51","52","53","54","55","56"],"/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/MyHistoryLimitOrders.tsx",["57","58","59","60","61","62","63"],"/home/fabio/Projects/secret-amm-limit-orders/www/src/Containers/MyOrders.tsx",["64","65","66","67","68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":12},{"ruleId":"78","severity":1,"message":"79","line":28,"column":10,"nodeType":"80","endLine":28,"endColumn":45,"suggestions":"81"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"82","line":2,"column":9,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"74","severity":1,"message":"83","line":2,"column":65,"nodeType":"76","messageId":"77","endLine":2,"endColumn":69},{"ruleId":"74","severity":1,"message":"84","line":2,"column":71,"nodeType":"76","messageId":"77","endLine":2,"endColumn":74},{"ruleId":"78","severity":1,"message":"85","line":36,"column":8,"nodeType":"80","endLine":36,"endColumn":10,"suggestions":"86"},{"ruleId":"78","severity":1,"message":"87","line":57,"column":8,"nodeType":"80","endLine":57,"endColumn":37,"suggestions":"88"},{"ruleId":"74","severity":1,"message":"82","line":2,"column":9,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"74","severity":1,"message":"89","line":2,"column":23,"nodeType":"76","messageId":"77","endLine":2,"endColumn":30},{"ruleId":"74","severity":1,"message":"90","line":2,"column":32,"nodeType":"76","messageId":"77","endLine":2,"endColumn":37},{"ruleId":"74","severity":1,"message":"91","line":2,"column":39,"nodeType":"76","messageId":"77","endLine":2,"endColumn":53},{"ruleId":"74","severity":1,"message":"92","line":2,"column":55,"nodeType":"76","messageId":"77","endLine":2,"endColumn":63},{"ruleId":"74","severity":1,"message":"93","line":14,"column":12,"nodeType":"76","messageId":"77","endLine":14,"endColumn":34},{"ruleId":"74","severity":1,"message":"94","line":14,"column":36,"nodeType":"76","messageId":"77","endLine":14,"endColumn":61},{"ruleId":"78","severity":1,"message":"95","line":53,"column":8,"nodeType":"80","endLine":53,"endColumn":10,"suggestions":"96"},{"ruleId":"74","severity":1,"message":"82","line":2,"column":9,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"74","severity":1,"message":"97","line":2,"column":15,"nodeType":"76","messageId":"77","endLine":2,"endColumn":21},{"ruleId":"74","severity":1,"message":"89","line":2,"column":23,"nodeType":"76","messageId":"77","endLine":2,"endColumn":30},{"ruleId":"74","severity":1,"message":"90","line":2,"column":32,"nodeType":"76","messageId":"77","endLine":2,"endColumn":37},{"ruleId":"74","severity":1,"message":"91","line":2,"column":39,"nodeType":"76","messageId":"77","endLine":2,"endColumn":53},{"ruleId":"74","severity":1,"message":"92","line":2,"column":55,"nodeType":"76","messageId":"77","endLine":2,"endColumn":63},{"ruleId":"78","severity":1,"message":"95","line":55,"column":8,"nodeType":"80","endLine":55,"endColumn":10,"suggestions":"98"},{"ruleId":"74","severity":1,"message":"82","line":6,"column":5,"nodeType":"76","messageId":"77","endLine":6,"endColumn":9},{"ruleId":"74","severity":1,"message":"97","line":7,"column":5,"nodeType":"76","messageId":"77","endLine":7,"endColumn":11},{"ruleId":"74","severity":1,"message":"89","line":8,"column":5,"nodeType":"76","messageId":"77","endLine":8,"endColumn":12},{"ruleId":"74","severity":1,"message":"90","line":9,"column":5,"nodeType":"76","messageId":"77","endLine":9,"endColumn":10},{"ruleId":"74","severity":1,"message":"99","line":12,"column":5,"nodeType":"76","messageId":"77","endLine":12,"endColumn":10},{"ruleId":"78","severity":1,"message":"85","line":39,"column":8,"nodeType":"80","endLine":39,"endColumn":10,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ORDERS_FACTORY_ADDRESS'. Either include it or remove the dependency array.","ArrayExpression",["103"],"'Card' is defined but never used.","'Form' is defined but never used.","'Nav' is defined but never used.","React Hook useEffect has missing dependencies: 'ORDERS_FACTORY_ADDRESS' and 'client.execute'. Either include them or remove the dependency array.",["104"],"React Hook useEffect has a missing dependency: 'getAmmPrice'. Either include it or remove the dependency array.",["105"],"'Spinner' is defined but never used.","'Modal' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'historyLimitOrdersData' is assigned a value but never used.","'setHistoryLimitOrdersData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'client.accountData.address', 'client.execute', 'getAmmPrice', 'pair.contract_addr', and 'viewKey'. Either include them or remove the dependency array.",["106"],"'Button' is defined but never used.",["107"],"'Table' is defined but never used.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},{"desc":"111","fix":"118"},"Update the dependencies array to be: [ORDERS_FACTORY_ADDRESS, client, setViewKey, viewKey.ready]",{"range":"119","text":"120"},"Update the dependencies array to be: [ORDERS_FACTORY_ADDRESS, client.execute]",{"range":"121","text":"122"},"Update the dependencies array to be: [getAmmPrice, selectedAmmFactoryPairIndex]",{"range":"123","text":"124"},"Update the dependencies array to be: [client.accountData.address, client.execute, getAmmPrice, pair.contract_addr, viewKey]",{"range":"125","text":"126"},{"range":"127","text":"126"},{"range":"128","text":"122"},[883,918],"[ORDERS_FACTORY_ADDRESS, client, setViewKey, viewKey.ready]",[1603,1605],"[ORDERS_FACTORY_ADDRESS, client.execute]",[2432,2461],"[getAmmPrice, selectedAmmFactoryPairIndex]",[2293,2295],"[client.accountData.address, client.execute, getAmmPrice, pair.contract_addr, viewKey]",[2280,2282],[1014,1016]]